# Generated by Django 5.2.4 on 2025-07-20 05:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="RepairCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brand", models.CharField(max_length=100)),
                ("model", models.CharField(blank=True, max_length=100)),
                ("color", models.CharField(blank=True, max_length=50)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bikes",
                        to="workshop.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RepairJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "problem_description",
                    models.TextField(blank=True, verbose_name="תיאור התקלה"),
                ),
                ("diagnosis", models.TextField(blank=True, verbose_name="אבחון")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("reported", "דווח על ידי לקוח"),
                            ("diagnosed", "מאובחן - ממתין לאישור לקוח"),
                            ("partially_approved", "אושר חלקית על ידי לקוח"),
                            ("approved", "אושר על ידי לקוח"),
                            ("in_progress", "בביצוע"),
                            ("awaiting_quality_check", "ממתין לבדיקת איכות"),
                            ("quality_approved", "עבר בדיקת איכות - מוכן לאיסוף"),
                            ("completed", "הושלם"),
                            ("delivered", "נמסר ללקוח"),
                        ],
                        default="reported",
                        max_length=30,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("diagnosed_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "is_stuck",
                    models.BooleanField(default=False, verbose_name="מכונאי תקוע"),
                ),
                (
                    "stuck_reason",
                    models.TextField(blank=True, verbose_name="סיבת התקיעות"),
                ),
                (
                    "stuck_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="תאריך סימון כתקוע"
                    ),
                ),
                (
                    "stuck_resolved",
                    models.BooleanField(default=False, verbose_name="התקיעות נפתרה"),
                ),
                (
                    "manager_response",
                    models.TextField(blank=True, verbose_name="תגובת מנהל"),
                ),
                (
                    "quality_check_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="תאריך בדיקת איכות"
                    ),
                ),
                (
                    "quality_notes",
                    models.TextField(blank=True, verbose_name="הערות בדיקת איכות"),
                ),
                (
                    "ready_for_pickup_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="תאריך מוכנות לאיסוף"
                    ),
                ),
                (
                    "customer_notified",
                    models.BooleanField(
                        default=False, verbose_name="לקוח עודכן על מוכנות לאיסוף"
                    ),
                ),
                (
                    "available_for_pickup",
                    models.BooleanField(
                        default=False, verbose_name="זמין לתפיסה ראשונה"
                    ),
                ),
                (
                    "pickup_priority",
                    models.CharField(
                        choices=[
                            ("normal", "רגיל"),
                            ("urgent", "דחוף"),
                            ("critical", "קריטי"),
                        ],
                        default="normal",
                        max_length=20,
                        verbose_name="עדיפות",
                    ),
                ),
                (
                    "assigned_mechanic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_repairs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "bike",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="workshop.bike"
                    ),
                ),
                (
                    "quality_checked_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="quality_checked_repairs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="נבדק על ידי מנהל",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RepairItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=200, verbose_name="תיאור הפעולה"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="מחיר"
                    ),
                ),
                (
                    "is_approved_by_customer",
                    models.BooleanField(default=False, verbose_name="אושר על ידי לקוח"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "ממתין"),
                            ("completed", "בוצע"),
                            ("blocked", "תקוע"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="סטטוס",
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="בוצע"),
                ),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, verbose_name="הערות")),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="בוצע על ידי",
                    ),
                ),
                (
                    "repair_job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repair_items",
                        to="workshop.repairjob",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RepairSubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="workshop.repaircategory",
                    ),
                ),
            ],
            options={
                "unique_together": {("category", "name")},
            },
        ),
        migrations.AddField(
            model_name="repairjob",
            name="subcategories",
            field=models.ManyToManyField(
                blank=True, related_name="repair_jobs", to="workshop.repairsubcategory"
            ),
        ),
        migrations.CreateModel(
            name="RepairUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(verbose_name="הודעה")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_visible_to_customer",
                    models.BooleanField(default=True, verbose_name="גלוי ללקוח"),
                ),
                (
                    "repair_job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="workshop.repairjob",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("customer", "לקוח"),
                            ("mechanic", "מכונאי"),
                            ("manager", "מנהל"),
                        ],
                        default="customer",
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
